{"remainingRequest":"/Users/mariorodriguez/Documents/Tekclas/Projects/Bears App/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mariorodriguez/Documents/Tekclas/Projects/Bears App/src/components/Signup2.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mariorodriguez/Documents/Tekclas/Projects/Bears App/src/components/Signup2.vue","mtime":1548081918932},{"path":"/Users/mariorodriguez/Documents/Tekclas/Projects/Bears App/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mariorodriguez/Documents/Tekclas/Projects/Bears App/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mariorodriguez/Documents/Tekclas/Projects/Bears App/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mariorodriguez/Documents/Tekclas/Projects/Bears App/node_modules/vuetify-loader/lib/loader.js","mtime":1543737895000},{"path":"/Users/mariorodriguez/Documents/Tekclas/Projects/Bears App/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mariorodriguez/Documents/Tekclas/Projects/Bears App/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport slugify from \"slugify\";\nimport db from \"@/fb\";\n\nimport firebase from \"firebase/app\";\n\nimport \"firebase/auth\";\n\nexport default {\n  name: \"Signup\",\n  data() {\n    return {\n      email: \"\",\n      password: \"\",\n      username: \"\",\n      slug: \"\",\n      feedback: \"\",\n      show1: false,\n      show2: true,\n      show3: false,\n      show4: false\n    };\n  },\n  methods: {\n    signup() {\n      if(this.username && this.email && this.password){\n        this.feedback = null\n        this.slug = slugify(this.username, {\n          replacement: '-',\n          remove: /[$*_+~.()'\"!\\-:@]/g,\n          lower: true\n        })\n          \n      let ref = db.collection('users').doc(this.slug)\n        ref.get().then(doc => {\n          if(doc.exists){\n            this.feedback = 'This alias already exists'}\n            \n               else {\n          // this alias does not yet exists in the db\n            firebase.auth().createUserWithEmailAndPassword(this.email, this.password)\n                   \n           .then(cred => {\n                \n              ref.set({\n                username: this.username,\n                geolocation: null,\n                user_id: cred.user.uid\n              })\n            }).then(() => {\n              this.feedback = 'User Name Added Ya Digg'\n            }).then(() => {\n              this.$router.push({ name: 'Team' })\n            })\n            .catch(err => {\n              this.feedback = err.message\n            })\n          }\n        })\n      } else {\n        this.feedback = 'Please fill in all fields'\n      }\n    }\n  }\n}\n",{"version":3,"sources":["Signup2.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuDA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Signup2.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-dialog max-width=\"600px\">\n    <v-btn fab slot=\"activator\" color=\"black lime\n--text\">\n      <v-icon large>add_circle</v-icon>\n    </v-btn>\n    <v-card>\n      <v-card-title>\n        <h2>Sign UP</h2>\n      </v-card-title>\n      \n      <v-card-text> \n        <v-form v-on:submit.prevent=\"signup\" class=\"px-3\" ref=\"form\">\n         \n          <v-text-field\n            v-model=\"username\"\n            label=\"User Name\"\n            prepend-icon=\"person\"\n            color=\"orange\"\n            hint=\"Must be unique\">\n          </v-text-field>\n          \n          <v-text-field \n           v-model=\"email\" \n           label=\"Email\" \n           prepend-icon=\"email\"\n           hint=\"Use your favorie email\">\n          </v-text-field>\n          \n          <v-text-field\n            v-model=\"password\"\n            label=\"Create Password\"\n            :append-icon=\"show1 ? 'visibility_off' : 'visibility'\"\n            :type=\"show1 ? 'text' : 'password'\"\n            name=\"input-10-1\"\n            prepend-icon=\"security\"\n            color=\"blue\"\n            hint=\"Must be at least 6 characters don't fuck around\"\n            counter\n            @click:append=\"show1 = !show1\">\n          </v-text-field>\n\n          <p class=\"pl-2 red--text\" v-if=\"feedback\">{{feedback}}</p>\n\n          <v-spacer></v-spacer>\n\n          <v-btn flat @click.prevent=\"signup\" class=\"success mx-0 mt-3\">Sign up</v-btn>\n       \n         </v-form>\n      </v-card-text>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\nimport slugify from \"slugify\";\nimport db from \"@/fb\";\n\nimport firebase from \"firebase/app\";\n\nimport \"firebase/auth\";\n\nexport default {\n  name: \"Signup\",\n  data() {\n    return {\n      email: \"\",\n      password: \"\",\n      username: \"\",\n      slug: \"\",\n      feedback: \"\",\n      show1: false,\n      show2: true,\n      show3: false,\n      show4: false\n    };\n  },\n  methods: {\n    signup() {\n      if(this.username && this.email && this.password){\n        this.feedback = null\n        this.slug = slugify(this.username, {\n          replacement: '-',\n          remove: /[$*_+~.()'\"!\\-:@]/g,\n          lower: true\n        })\n          \n      let ref = db.collection('users').doc(this.slug)\n        ref.get().then(doc => {\n          if(doc.exists){\n            this.feedback = 'This alias already exists'}\n            \n               else {\n          // this alias does not yet exists in the db\n            firebase.auth().createUserWithEmailAndPassword(this.email, this.password)\n                   \n           .then(cred => {\n                \n              ref.set({\n                username: this.username,\n                geolocation: null,\n                user_id: cred.user.uid\n              })\n            }).then(() => {\n              this.feedback = 'User Name Added Ya Digg'\n            }).then(() => {\n              this.$router.push({ name: 'Team' })\n            })\n            .catch(err => {\n              this.feedback = err.message\n            })\n          }\n        })\n      } else {\n        this.feedback = 'Please fill in all fields'\n      }\n    }\n  }\n}\n</script>"]}]}